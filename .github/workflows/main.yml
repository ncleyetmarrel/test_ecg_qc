name: CI

on:
  # Triggers the workflow on push
  push:
    branches: '**'

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  lint:
    runs-on: ubuntu-latest
    container: python:3.9.4-alpine3.13
    steps:
      # TODO: understand why to use this or not ?
      # - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==3.9.1
      - name: Lint
        run: flake8 dags/  

  sast:
    runs-on: ubuntu-latest
    container: python:3.9.4-alpine3.13
    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit==1.7.0
      - name: SAST
        run: bandit -r dags/ 
  
  unittests:
    runs-on: ubuntu-latest
    steps:
      - name : print Hello 
        run : echo 'Hello world test !'

  build:
    needs: [lint, sast, unittests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name : print Hello 
        run : echo 'Hello world !'

#  
#
#  
#  # This workflow contains a single job called "build"
#   build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#      
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pytest
#          pip install "apache-airflow==2.0.1" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.0.1/constraints-3.8.txt" --use-deprecated legacy-resolver
#      
#      # Runs linting on source code
#      - name: Linting
#        run: flake8 src/
#        
#      # Runs unit tests 
#      - name: Unit Tests 
#        run: pytest test/
#        
#      # Starts airflow workflow
#      - name: Airflow workflow 
#        run: |
#          airflow db init
#          ls airflow/
#          airflow dags test -S /airflow useless_workflow $(date +'%Y-%m-%d')
#  
#
#